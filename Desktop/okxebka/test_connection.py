#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OKX API
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
"""

from okx_trader import OKXTrader
import json


def test_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OKX API"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OKX API...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–π–¥–µ—Ä–∞
        trader = OKXTrader()
        print("‚úÖ –¢—Ä–µ–π–¥–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
        print("\nüìä –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∞–∫–∫–∞—É–Ω—Ç–∞")
        balance = trader.get_account_balance()
        if balance:
            print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"   –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: {balance.get('totalEq', 'N/A')} USDT")
            print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞: {balance.get('availEq', 'N/A')} USDT")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å")
            return False
            
        # –¢–µ—Å—Ç 1.1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
        print("\n‚öôÔ∏è –¢–µ—Å—Ç 1.1: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞")
        config = trader.get_account_config()
        if config:
            print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞")
            print(f"   –£—Ä–æ–≤–µ–Ω—å –∞–∫–∫–∞—É–Ω—Ç–∞: {config.get('acctLv', 'N/A')}")
            print(f"   –†–µ–∂–∏–º –ø–æ–∑–∏—Ü–∏–π: {config.get('posMode', 'N/A')}")
            print(f"   –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–Ω—è—Ç–∏–µ: {config.get('autoLoan', 'N/A')}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
            return False
            
        # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
        print("\nüîç –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä")
        pairs = trader.search_futures_pair("BTC")
        if pairs:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(pairs)} BTC –ø–∞—Ä")
            for pair in pairs[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                print(f"   - {pair['instId']}")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã")
            return False
            
        # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã
        print("\nüí∞ –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã")
        if pairs:
            test_pair = pairs[0]['instId']
            price = trader.get_current_price(test_pair)
            if price:
                print(f"‚úÖ –¶–µ–Ω–∞ {test_pair}: ${price:,.2f}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –¥–ª—è {test_pair}")
                return False
        
        # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π
        print("\nüìà –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π")
        positions = trader.get_positions()
        print(f"‚úÖ –ü–æ–∑–∏—Ü–∏–π –Ω–∞–π–¥–µ–Ω–æ: {len(positions)}")
        if positions:
            for pos in positions:
                print(f"   - {pos['instId']}: {pos['pos']} (PnL: ${float(pos['upl']):.2f})")
        else:
            print("   –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π –Ω–µ—Ç")
            
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python main.py")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å API –∫–ª—é—á–µ–π –≤ config.json")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –∫–ª—é—á–∏ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∞ –Ω–∞ —Ç–æ—Ä–≥–æ–≤–ª—é")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ IP-–∞–¥—Ä–µ—Å –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö OKX")
        return False


def print_config_info():
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        with open('config.json', 'r') as f:
            config = json.load(f)
            
        print("‚öôÔ∏è –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
        print(f"   API Key: {config['okx']['api_key'][:10]}...")
        print(f"   –†–µ–∂–∏–º: {'–†–µ–∞–ª—å–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è' if config['okx'].get('sandbox', True) == False else '–î–µ–º–æ —Ç–æ—Ä–≥–æ–≤–ª—è'}")
        print(f"   –ü–ª–µ—á–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {config.get('default_leverage', '–Ω–µ –∑–∞–¥–∞–Ω–æ')}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: {e}")


if __name__ == "__main__":
    print("=" * 50)
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–ï–î–ò–ù–ï–ù–ò–Ø OKX API")
    print("=" * 50)
    
    print_config_info()
    print()
    
    success = test_connection()
    
    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û")
    else:
        print("‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò")
    print("=" * 50) 